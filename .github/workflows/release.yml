---
name: Build and Release
on:
  - push
env:
  SNYK_VERSION: "1.1157.0"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: snyk/cli
          ref: refs/tags/v${{ env.SNYK_VERSION }}
          fetch-depth: 0  # some of the unit tests require repository history
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: apply patch adding the client-sbom creation feature
        run: curl --fail -Ls "https://github.com/candrews/snyk-cli/commit/977a2f0d9203961f38882546775cd26c49f5ace5.patch" | git apply
      - name: Install dependencies
        run: npm ci
      - name: make pre-build
        run: make pre-build
      - name: build
        run: npm run build:prod
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"  # snyk should upgrade to a newer version of webpack that doesn't require this workaround: https://github.com/snyk/cli/pull/4147
      - name: run unit tests
        run: npm run test:unit
        env:
          SNYK_TOKEN: "123456789"  # Some tests require a token to be set. Most don't actually use it: https://github.com/snyk/cli/issues/4200 But, at least one ("succeed testing with correct exit code - and analytics added" in test/jest/unit/snyk-code/snyk-code-test.spec.ts) requires it to be set to "123456789"
          FORCE_COLOR: "1"  # Some tests check for ANSI color codes. chalk doesn't enable color by default for the terminal settings used by GitHub Actions, so color must be forced.
      - name: prepack
        run: npx ts-node ./release-scripts/prune-dependencies-in-packagejson.ts
      - name: set package name to @candrewsintegralblue/snyk
        run: npm pkg set name="@candrewsintegralblue/snyk"
      - name: set package version
        run: npm version "$SNYK_VERSION" --no-git-tag-version --workspaces --include-workspace-root
      - name: package
        run: npm pack
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "*.tgz"
          if-no-files-found: error
      - name: publish dry run
        run: npm publish --access public --dry-run *.tgz
  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.ref_name == 'master'
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: 'https://registry.npmjs.org'
      - name: download
        uses: actions/download-artifact@v3
        with:
          name: package
      - name: publish
        run: npm publish --access public *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
